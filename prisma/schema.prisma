generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id              String    @id @default(auto()) @map("_id") @db.ObjectId
  name            String?
  username        String?   @unique
  bio             String?
  email           String?   @unique
  emailVerified   DateTime?
  image           String?
  coverImage      String?
  profileImage    String?
  hashedPassword  String?
  followingIds    String[]  @db.ObjectId
  hasNotification Boolean?

  post         Post[]
  comments     Comment[]
  notification Notification[]

  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt
}

model Post {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  body String

  user     User?     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId   String?   @db.ObjectId
  likedIds String[]  @db.ObjectId
  comments Comment[]

  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt
}

model Comment {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  body String

  user   User?   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String? @db.ObjectId
  post   Post?   @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId String? @db.ObjectId

  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt
}

model Notification {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  body String

  user   User?   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String? @db.ObjectId

  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt
}
